Event loop in javascript
Data structures 
web sockets
REST API Methods
REST API designing 
SPRINT BOOT concepts 
Inheritance ,map,for,filter differences
[2, 4, 5, 6,9] find pair of numbers whose sum is 10
React class component and functional component
React hooks
HOC
N+1 problem in hibernate
Candidate key ( answered composite key)
Orchestration and choreography in design pattern.
Spring boot usage
Spring boot server change
Pom structure
Singleton thread safe 
Run and start method, thread life cycle.
Two phase commit.
Saga pattern




React JS

brief introduction,
recent project related questions,
technologies and procedure,

about bracket balance and unbalance query
about time complexity,
about objects
about prototype,


write a program to retrun pair of sum 10.


Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.
A subarray is a contiguous non-empty sequence of elements within an array.
Example 1:
Input: nums = [1,1,1], k = 2Output: 2
Example 2:
Input: nums = [1,2,3], k = 3Output: 2



1. [1,2,3, 4, 5, 6, 1, 1, 1,3], find pair of numbers whose sum is 6
2. Multithreading concetps,
3. Difference between String builder and String buffer
4. explain about hashmap
5. Difference between ArrayList and Linkedlist
6. What is functional interface
7. How many .class files created for interface
8. How to call external APi
9. How to make Asysnchronous calls in Microservices
10. What is the thread pool
11. How to commit the code
12. Which version controll used
13. Do you worked on any Messaging Queue
14. What is the Normalization


Given an integer array nums sorted in non-decreasing order, return an array of the squares of each number sorted in non-decreasing order in O(n) time complexity. 

 

Example 1:

 

Input: nums = [-4, -1, 0, 3, 20]

Output: [0,  1, 9, 16, 100]

 

Explanation: After squaring, the array becomes [16, 1, 0, 9, 100]. After sorting, it becomes [0, 1, 9, 16, 100]

Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

You can return the answer in any order.

 

Example 1:

Input: nums = [2,7,11,15], target = 9

Output: [0,1]

Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].

Example 2:

Input: nums = [3,2,4], target = 6

Output: [1,2]

Example 3:

Input: nums = [3,3], target = 6

Output: [0,1]


u want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.

Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0


put: prices = [7,1,5,3,6,4]Output: 5Explanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5. Note that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell.


Given an integer array nums sorted in non-decreasing order, return an array of the squares of each number sorted in non-decreasing order in O(n) time complexity. 

 

Example 1:

 

Input: nums = [-4, -1, 0, 3, 20]

Output: [0,  1, 9, 16, 400]

 

Explanation: After squaring, the array becomes [16, 1, 0, 9, 400]. After sorting, it becomes [0, 1, 9, 16, 400]


Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

You can return the answer in any order.

 

Example 1:

Input: nums = [2,7,11,15], target = 9

Output: [0,1]

Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].

Example 2:

Input: nums = [3,2,4], target = 6

Output: [1,2]

Example 3:

Input: nums = [3,3], target = 6

Output: [0,1]

 

Constraints:

2 <= nums.length <= 104
-109 <= nums[i] <= 109
-109 <= target <= 109
Only one valid answer exists.

[Monday 5:39 PM] Devkinandan Chauhan




You are given an array prices where prices[i] is the price of a given stock on the ith day.

You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.

Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0







[Monday 5:40 PM] Devkinandan Chauhan




Input: prices = [7,1,5,3,6,4]

Output: 5



Explanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.

Note that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell.







[Monday 5:40 PM] Devkinandan Chauhan




Input: prices = [7,6,4,3,1]

Output: 0

Explanation: In this case, no transactions are done and the max profit = 0.


[Monday 5:39 PM] Devkinandan Chauhan




You are given an array prices where prices[i] is the price of a given stock on the ith day.

You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.

Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0







[Monday 5:40 PM] Devkinandan Chauhan




Input: prices = [7,1,5,3,6,4]

Output: 5



Explanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.

Note that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell.







[Monday 5:40 PM] Devkinandan Chauhan




Input: prices = [7,6,4,3,1]

Output: 0

Explanation: In this case, no transactions are done and the max profit = 0.





[0, 5, 3, 0, 7, 4, 76, 0, 9, 0, 55] -> [5, 3, 7, 4, 76, 9, 55, 0, 0, 0, 0]



